local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local jumpPower = 50 -- Default jump power

local function createSlider(name, min, max, default, callback)
    local slider = Instance.new("ScreenGui")
    local frame = Instance.new("Frame")
    local textLabel = Instance.new("TextLabel")
    local sliderBar = Instance.new("Frame")
    local sliderButton = Instance.new("TextButton")

    slider.Name = name
    slider.Parent = player:WaitForChild("PlayerGui")

    frame.Size = UDim2.new(0, 200, 0, 50)
    frame.Position = UDim2.new(0.5, -100, 0.9, -25)
    frame.Parent = slider

    textLabel.Size = UDim2.new(1, 0, 0.5, 0)
    textLabel.Text = name
    textLabel.Parent = frame

    sliderBar.Size = UDim2.new(1, -20, 0.5, -10)
    sliderBar.Position = UDim2.new(0, 10, 0.5, 5)
    sliderBar.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
    sliderBar.Parent = frame

    sliderButton.Size = UDim2.new(0, 10, 1, 0)
    sliderButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
    sliderButton.Parent = sliderBar

    local function updateSlider(input)
        local scale = math.clamp((input.Position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        sliderButton.Position = UDim2.new(scale, -5, 0, 0)
        local value = min + (max - min) * scale
        callback(value)
    end

    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            updateSlider(input)
            local moveConnection
            moveConnection = game:GetService("UserInputService").InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    moveConnection:Disconnect()
                end
            end)
        end
    end)

    updateSlider({Position = Vector2.new(sliderBar.AbsolutePosition.X + sliderBar.AbsoluteSize.X * (default - min) / (max - min), 0)})
end

createSlider("Jump Power", 50, 100, jumpPower, function(value)
    jumpPower = value
    humanoid.JumpPower = jumpPower
end)
